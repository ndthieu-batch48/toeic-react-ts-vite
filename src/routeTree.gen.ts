/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthenticatedAuthenticatedRouteImport } from './routes/_authenticated/_authenticated'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as AuthenticatedProfileIndexRouteImport } from './routes/_authenticated/profile/index'
import { Route as AuthenticatedHistoryIndexRouteImport } from './routes/_authenticated/history/index'
import { Route as AuthenticatedAuthenticatedTestRouteImport } from './routes/_authenticated/_authenticated.test'
import { Route as AuthenticatedAuthenticatedDetailRouteImport } from './routes/_authenticated/_authenticated.detail'
import { Route as AuthenticatedAuthenticatedTestIdRouteImport } from './routes/_authenticated/_authenticated.$testId'
import { Route as authPasswordVerifyRouteImport } from './routes/(auth)/password/verify'
import { Route as authPasswordResetRouteImport } from './routes/(auth)/password/reset'
import { Route as authPasswordForgotRouteImport } from './routes/(auth)/password/forgot'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedAuthenticatedRoute =
  AuthenticatedAuthenticatedRouteImport.update({
    id: '/_authenticated/_authenticated',
    getParentRoute: () => rootRouteImport,
  } as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedProfileIndexRoute =
  AuthenticatedProfileIndexRouteImport.update({
    id: '/_authenticated/profile/',
    path: '/profile/',
    getParentRoute: () => rootRouteImport,
  } as any)
const AuthenticatedHistoryIndexRoute =
  AuthenticatedHistoryIndexRouteImport.update({
    id: '/_authenticated/history/',
    path: '/history/',
    getParentRoute: () => rootRouteImport,
  } as any)
const AuthenticatedAuthenticatedTestRoute =
  AuthenticatedAuthenticatedTestRouteImport.update({
    id: '/test',
    path: '/test',
    getParentRoute: () => AuthenticatedAuthenticatedRoute,
  } as any)
const AuthenticatedAuthenticatedDetailRoute =
  AuthenticatedAuthenticatedDetailRouteImport.update({
    id: '/detail',
    path: '/detail',
    getParentRoute: () => AuthenticatedAuthenticatedRoute,
  } as any)
const AuthenticatedAuthenticatedTestIdRoute =
  AuthenticatedAuthenticatedTestIdRouteImport.update({
    id: '/$testId',
    path: '/$testId',
    getParentRoute: () => AuthenticatedAuthenticatedRoute,
  } as any)
const authPasswordVerifyRoute = authPasswordVerifyRouteImport.update({
  id: '/(auth)/password/verify',
  path: '/password/verify',
  getParentRoute: () => rootRouteImport,
} as any)
const authPasswordResetRoute = authPasswordResetRouteImport.update({
  id: '/(auth)/password/reset',
  path: '/password/reset',
  getParentRoute: () => rootRouteImport,
} as any)
const authPasswordForgotRoute = authPasswordForgotRouteImport.update({
  id: '/(auth)/password/forgot',
  path: '/password/forgot',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof authLoginRoute
  '/password/forgot': typeof authPasswordForgotRoute
  '/password/reset': typeof authPasswordResetRoute
  '/password/verify': typeof authPasswordVerifyRoute
  '/$testId': typeof AuthenticatedAuthenticatedTestIdRoute
  '/detail': typeof AuthenticatedAuthenticatedDetailRoute
  '/test': typeof AuthenticatedAuthenticatedTestRoute
  '/history': typeof AuthenticatedHistoryIndexRoute
  '/profile': typeof AuthenticatedProfileIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof authLoginRoute
  '/password/forgot': typeof authPasswordForgotRoute
  '/password/reset': typeof authPasswordResetRoute
  '/password/verify': typeof authPasswordVerifyRoute
  '/$testId': typeof AuthenticatedAuthenticatedTestIdRoute
  '/detail': typeof AuthenticatedAuthenticatedDetailRoute
  '/test': typeof AuthenticatedAuthenticatedTestRoute
  '/history': typeof AuthenticatedHistoryIndexRoute
  '/profile': typeof AuthenticatedProfileIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(auth)/login': typeof authLoginRoute
  '/_authenticated/_authenticated': typeof AuthenticatedAuthenticatedRouteWithChildren
  '/(auth)/password/forgot': typeof authPasswordForgotRoute
  '/(auth)/password/reset': typeof authPasswordResetRoute
  '/(auth)/password/verify': typeof authPasswordVerifyRoute
  '/_authenticated/_authenticated/$testId': typeof AuthenticatedAuthenticatedTestIdRoute
  '/_authenticated/_authenticated/detail': typeof AuthenticatedAuthenticatedDetailRoute
  '/_authenticated/_authenticated/test': typeof AuthenticatedAuthenticatedTestRoute
  '/_authenticated/history/': typeof AuthenticatedHistoryIndexRoute
  '/_authenticated/profile/': typeof AuthenticatedProfileIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/password/forgot'
    | '/password/reset'
    | '/password/verify'
    | '/$testId'
    | '/detail'
    | '/test'
    | '/history'
    | '/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/password/forgot'
    | '/password/reset'
    | '/password/verify'
    | '/$testId'
    | '/detail'
    | '/test'
    | '/history'
    | '/profile'
  id:
    | '__root__'
    | '/'
    | '/(auth)/login'
    | '/_authenticated/_authenticated'
    | '/(auth)/password/forgot'
    | '/(auth)/password/reset'
    | '/(auth)/password/verify'
    | '/_authenticated/_authenticated/$testId'
    | '/_authenticated/_authenticated/detail'
    | '/_authenticated/_authenticated/test'
    | '/_authenticated/history/'
    | '/_authenticated/profile/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authLoginRoute: typeof authLoginRoute
  AuthenticatedAuthenticatedRoute: typeof AuthenticatedAuthenticatedRouteWithChildren
  authPasswordForgotRoute: typeof authPasswordForgotRoute
  authPasswordResetRoute: typeof authPasswordResetRoute
  authPasswordVerifyRoute: typeof authPasswordVerifyRoute
  AuthenticatedHistoryIndexRoute: typeof AuthenticatedHistoryIndexRoute
  AuthenticatedProfileIndexRoute: typeof AuthenticatedProfileIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/_authenticated': {
      id: '/_authenticated/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedAuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/profile/': {
      id: '/_authenticated/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/history/': {
      id: '/_authenticated/history/'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof AuthenticatedHistoryIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/_authenticated/test': {
      id: '/_authenticated/_authenticated/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof AuthenticatedAuthenticatedTestRouteImport
      parentRoute: typeof AuthenticatedAuthenticatedRoute
    }
    '/_authenticated/_authenticated/detail': {
      id: '/_authenticated/_authenticated/detail'
      path: '/detail'
      fullPath: '/detail'
      preLoaderRoute: typeof AuthenticatedAuthenticatedDetailRouteImport
      parentRoute: typeof AuthenticatedAuthenticatedRoute
    }
    '/_authenticated/_authenticated/$testId': {
      id: '/_authenticated/_authenticated/$testId'
      path: '/$testId'
      fullPath: '/$testId'
      preLoaderRoute: typeof AuthenticatedAuthenticatedTestIdRouteImport
      parentRoute: typeof AuthenticatedAuthenticatedRoute
    }
    '/(auth)/password/verify': {
      id: '/(auth)/password/verify'
      path: '/password/verify'
      fullPath: '/password/verify'
      preLoaderRoute: typeof authPasswordVerifyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/password/reset': {
      id: '/(auth)/password/reset'
      path: '/password/reset'
      fullPath: '/password/reset'
      preLoaderRoute: typeof authPasswordResetRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/password/forgot': {
      id: '/(auth)/password/forgot'
      path: '/password/forgot'
      fullPath: '/password/forgot'
      preLoaderRoute: typeof authPasswordForgotRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AuthenticatedAuthenticatedRouteChildren {
  AuthenticatedAuthenticatedTestIdRoute: typeof AuthenticatedAuthenticatedTestIdRoute
  AuthenticatedAuthenticatedDetailRoute: typeof AuthenticatedAuthenticatedDetailRoute
  AuthenticatedAuthenticatedTestRoute: typeof AuthenticatedAuthenticatedTestRoute
}

const AuthenticatedAuthenticatedRouteChildren: AuthenticatedAuthenticatedRouteChildren =
  {
    AuthenticatedAuthenticatedTestIdRoute:
      AuthenticatedAuthenticatedTestIdRoute,
    AuthenticatedAuthenticatedDetailRoute:
      AuthenticatedAuthenticatedDetailRoute,
    AuthenticatedAuthenticatedTestRoute: AuthenticatedAuthenticatedTestRoute,
  }

const AuthenticatedAuthenticatedRouteWithChildren =
  AuthenticatedAuthenticatedRoute._addFileChildren(
    AuthenticatedAuthenticatedRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authLoginRoute: authLoginRoute,
  AuthenticatedAuthenticatedRoute: AuthenticatedAuthenticatedRouteWithChildren,
  authPasswordForgotRoute: authPasswordForgotRoute,
  authPasswordResetRoute: authPasswordResetRoute,
  authPasswordVerifyRoute: authPasswordVerifyRoute,
  AuthenticatedHistoryIndexRoute: AuthenticatedHistoryIndexRoute,
  AuthenticatedProfileIndexRoute: AuthenticatedProfileIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
